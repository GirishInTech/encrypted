"""
Django settings for video_hosting project.

Generated by 'django-admin startproject' using Django 4.2.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path
import os
from google.oauth2 import service_account


# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-your-secret-key-change-this-in-production'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']  # Allow all hosts (OK for local development)

# Trust the Cloud Run domain for CSRF checks
CSRF_TRUSTED_ORIGINS = [
    "https://video-hosting-service-1068891226958.asia-south1.run.app"
]

# Optional (for future redeployments)
# This automatically adds the domain if passed via env variable
cloud_run_url = os.getenv("CLOUD_RUN_SERVICE_URL")
if cloud_run_url:
    CSRF_TRUSTED_ORIGINS.append(f"https://{cloud_run_url}")


# CSRF_TRUSTED_ORIGINS = [
#     "https://video-hosting-service-1068891226958.asia-south1.run.app",
# ]

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'videos',  # Our video app
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'video_hosting.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'django.template.context_processors.media',
            ],
        },
    },
]

WSGI_APPLICATION = 'video_hosting.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': BASE_DIR / 'db.sqlite3',
#     }
# }




# for cloud db and storage
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.postgresql',
#         'NAME': 'postgres',  # default database name in Cloud SQL
#         'USER': 'postgres',  # default admin username
#         'PASSWORD': 'Girish&8050',  # the password you set when creating the instance
#         'HOST': '127.0.0.1',  # Cloud SQL Proxy forwards this to your instance
#         'PORT': '5432',  # default PostgreSQL port
#     }
# }




#for docker
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME', 'postgres'),
        'USER': os.getenv('DB_USER', 'postgres'),
        'PASSWORD': os.getenv('DB_PASSWORD', 'Girish&8050'),
        'HOST': os.getenv('DB_HOST', '127.0.0.1'),
        'PORT': os.getenv('DB_PORT', '5432'),
    }
}







# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators

# Temporarily disabled for Python 3.13 compatibility
# You can enable these in production after testing
AUTH_PASSWORD_VALIDATORS = []

# AUTH_PASSWORD_VALIDATORS = [
#     {
#         'NAME': 'django.contrib.auth.password_validators.UserAttributeSimilarityValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validators.MinimumLengthValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validators.CommonPasswordValidator',
#     },
#     {
#         'NAME': 'django.contrib.auth.password_validators.NumericPasswordValidator',
#     },
# ]


# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/

STATIC_URL = 'static/'
STATICFILES_DIRS = [BASE_DIR / 'static']
STATIC_ROOT = BASE_DIR / 'staticfiles'

# Media files (uploaded videos)
# MEDIA_URL = '/media/'
# MEDIA_ROOT = BASE_DIR / 'media'




# Google Cloud Storage setup
INSTALLED_APPS += ['storages']

DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
GS_BUCKET_NAME = 'video-hosting-media-bucket-girish'  # replace with your exact bucket name
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    BASE_DIR / "key.json"
)

MEDIA_URL = f"https://storage.googleapis.com/{GS_BUCKET_NAME}/"








# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Session settings for security
SESSION_COOKIE_HTTPONLY = True
SESSION_COOKIE_SAMESITE = 'Lax'
SESSION_COOKIE_AGE = 3600  # 1 hour

# Login/Logout URLs
LOGIN_URL = '/admin/login/'
LOGOUT_REDIRECT_URL = '/'  # Redirect to homepage after logout
